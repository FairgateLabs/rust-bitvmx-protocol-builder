name: 'Test action'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git credentials for key manager
        run: |
          git config --global url."https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/FairgateLabs/".insteadOf "https://github.com/FairgateLabs/"

      - name: Clone rust-bitvmx-key-manager
        run: |
          cd ..
          git clone https://github.com/FairgateLabs/rust-bitvmx-key-manager.git

  test:
    if: ${{ !contains(github.event.pull_request.title, '[cov]') }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build project
        run: cargo build --verbose
        working-directory: ./rust-bitvmx-template-builder

      - name: Run tests
        run: cargo test --verbose
        working-directory: ./rust-bitvmx-template-builder

  test-with-coverage:
    if: ${{ contains(github.event.pull_request.title, '[cov]') }}
    runs-on: ubuntu-latest
    needs: setup

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Build project
        run: cargo build --verbose
        working-directory: ./rust-bitvmx-template-builder

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          working-directory: ./rust-bitvmx-template-builder
          args: '--out Xml --output-dir resources --exclude-files src/tests/* src/config/* src/config.rs src/main.rs src/cli.rs --no-fail-fast'

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'resources/cobertura.xml'
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
